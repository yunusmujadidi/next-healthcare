datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  DOCTOR
  ADMIN
  PATIENT
}

enum Gender {
  MALE
  FEMALE
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  emailVerified DateTime?
  phone         String?
  image         String?
  password      String?
  accounts      Account[]
  role          Role            @default(PATIENT)
  // Optional for WebAuthn support
  Authenticator Authenticator[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

// Optional for WebAuthn support
model Authenticator {
  credentialID         String  @unique
  userId               String
  providerAccountId    String
  credentialPublicKey  String
  counter              Int
  credentialDeviceType String
  credentialBackedUp   Boolean
  transports           String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([userId, credentialID])
}

model Patient {
  id                     String   @id @default(cuid())
  name                   String
  email                  String
  phone                  String
  birthDate              DateTime
  gender                 Gender
  address                String?
  occupation             String?
  emergencyContactName   String?
  emergencyContactNumber String?
  primaryPhysician       String?
  insuranceProvider      String?
  insurancePolicyNumber  String?
  allergies              String?
  currentMedication      String?
  familyMedicalHistory   String?
  pastMedicalHistory     String?
  identificationType     String?
  identificationNumber   String?
  identificationDocument String?
  treatmentConsent       Boolean
  disclosureConsent      Boolean
  privacyConsent         Boolean

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
